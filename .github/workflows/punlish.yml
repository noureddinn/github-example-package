name: publich maven package to github
on: 
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Realase version'     
        required: true
      tag:
        description: 'tag'
        required: true 
      developmentVersion:
        description: 'the next dev version (snapshot)'
        required: true 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: config git 
      run: git config --global user.name github-actions  && git config --global user.email github-actions@github.com
    - name: Prepare to GitHub Packages Apache Maven
      run: mvn release:prepare   -DreleaseVersion=$VERSION   -DdevelopmentVersion=$DEV_VERSION   -Dtag=$TAG -Dresume=false
      env:
        GITHUB_TOKEN: ${{ github.token }}
        VERSION: ${{ github.event.inputs.releaseVersion }}
        TAG: ${{ github.event.inputs.tag }}
        DEV_VERSION: ${{ github.event.inputs.developmentVersion }}
    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn release:perform -s $GITHUB_WORKSPACE/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    - name: pubfdfdfdfd
      run:  git checkout tags/${{ github.event.inputs.tag }}  
    - name: maven packaging
      run:  mvn papckage
    - name: list target files
      run: cd $GITHUB_WORKSPACE/target  &&  ls
    - name: push to s3
      run:   aws s3api put-object --bucket codepipeline-eu-west-1-873748798746 --key testpermi --body $GITHUB_WORKSPACE/target/github-example-package-${{ github.event.inputs.tag }}.jar
    - name: Rollback in error
      if: ${{ failure() }}
      run: mvn release:rollback -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
#       GITHUB REPO CREATE RELEASE IN SUCCESS JOB CASE
    - uses: "marvinpinto/action-automatic-releases@latest"
      if: ${{ job.status == 'success' }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: ${{ github.event.inputs.tag }}
